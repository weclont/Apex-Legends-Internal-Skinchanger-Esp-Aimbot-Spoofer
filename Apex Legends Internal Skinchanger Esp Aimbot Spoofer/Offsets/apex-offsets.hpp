/*
MoltenCheat Offsets Repository @MoltenCheat
Unix Epoch Time: 1646376124
Visit: https://github.com/MoltenCheat/offsets
Apex Legends Version: 11.1.2 (WIP)
*/

#pragma once
#include <cstddef>

std::ptrdiff_t client_render_targets = 0x1efa430;
std::ptrdiff_t ibase_client_dll = 0x195b460;
std::ptrdiff_t iclient_entity_list = 0x1ef9c38;
std::ptrdiff_t cprediction = 0x1ef9c40;
std::ptrdiff_t iv_model_render = 0x1239660;
std::ptrdiff_t vgui_system = 0x1eb3f80;
std::ptrdiff_t iv_render_view = 0x7431230;
std::ptrdiff_t iv_debug_overlay = 0x74cc438;
std::ptrdiff_t iv_model_info_client = 0x7431240;
std::ptrdiff_t iv_engine_client = 0x0;
std::ptrdiff_t iv_engine_trace = 0x7431248;
std::ptrdiff_t inetwork_string_table = 0x7431258;
std::ptrdiff_t cnetwork_u64_table = 0x742ea18;
std::ptrdiff_t cinput = 0x1d0d600;
std::ptrdiff_t cengine = 0x1240780;
std::ptrdiff_t iswapchain = 0xb84c068;
std::ptrdiff_t cl_entitylist = 0x1974ad8;
std::ptrdiff_t local_entity_handle = 0x123308c;
std::ptrdiff_t local_player = 0x1d243d8;
std::ptrdiff_t global_vars = 0x1309840;
std::ptrdiff_t name_list = 0xb9315d0;
std::ptrdiff_t view_render = 0x7431238;
std::ptrdiff_t view_matrix = 0x5f2891;
std::ptrdiff_t client_state = 0x1309b30;
std::ptrdiff_t sign_on_state = 0x1309bc8;
std::ptrdiff_t level_name = 0x1309ce0;
std::ptrdiff_t glow_enable = 0xe56;
std::ptrdiff_t glow_type = 0x2c0;
std::ptrdiff_t glow_color = 0x1d0;
std::ptrdiff_t m_localOrigin = 0x4; // Vector
std::ptrdiff_t m_hGroundEntity = 0x434; // Integer
std::ptrdiff_t m_iHealth = 0x438; // Integer
std::ptrdiff_t m_localAngles = 0x490; // Vector
std::ptrdiff_t m_iMaxHealth = 0x578; // Integer
std::ptrdiff_t m_lifeState = 0x798; // Integer
std::ptrdiff_t m_fireteamSlotIndex = 0x1c30; // Integer
std::ptrdiff_t m_aiSprinting = 0x1d9a; // Integer
std::ptrdiff_t m_aiNetworkFlags = 0x1dbc; // Integer
std::ptrdiff_t m_isHologram = 0x1dc0; // Integer
std::ptrdiff_t m_title = 0x1dc1; // String
std::ptrdiff_t m_aiSettingsIndex = 0x1de4; // Integer
std::ptrdiff_t m_subclass = 0x1de8; // Integer
std::ptrdiff_t m_radius = 0xa60; // Float
std::ptrdiff_t m_isEnabled = 0xa64; // Integer
std::ptrdiff_t m_networkTableSoundID = 0xa70; // Integer
std::ptrdiff_t m_networkedSegmentEndpointWorldSpace = 0xa78; // Vector
std::ptrdiff_t m_hasPolylineSegments = 0xa84; // Integer
std::ptrdiff_t m_animPlaybackRate = 0x10; // Float
std::ptrdiff_t m_animFrozen = 0x14; // Integer
std::ptrdiff_t m_animModelIndex = 0x18; // Integer
std::ptrdiff_t m_nNewSequenceParity = 0x20; // Integer
std::ptrdiff_t m_bClientSideRagdoll = 0x84; // Integer
std::ptrdiff_t m_vecForce = 0x88; // Vector
std::ptrdiff_t m_flEstIkOffset = 0x94; // Float
std::ptrdiff_t m_passDamageToParent = 0x7c4; // Integer
std::ptrdiff_t m_animNetworkFlags = 0xa88; // Integer
std::ptrdiff_t m_animActive = 0xa8c; // Integer
std::ptrdiff_t m_animCollisionEnabled = 0xa8f; // Integer
std::ptrdiff_t m_animRelativeToGroundEnabled = 0xa90; // Integer
std::ptrdiff_t m_animPlantingEnabled = 0xa91; // Integer
std::ptrdiff_t m_animInitialPos = 0xa94; // Vector
std::ptrdiff_t m_animInitialVel = 0xaa0; // Vector
std::ptrdiff_t m_animInitialRot = 0xaac; // Table
std::ptrdiff_t m_animInitialCorrectPos = 0xabc; // Vector
std::ptrdiff_t m_animInitialCorrectRot = 0xac8; // Table
std::ptrdiff_t m_animEntityToRefOffset = 0xad8; // Vector
std::ptrdiff_t m_animEntityToRefRotation = 0xae4; // Table
std::ptrdiff_t m_animScriptSequence = 0xafc; // Integer
std::ptrdiff_t m_animScriptModel = 0xb00; // Integer
std::ptrdiff_t m_animIgnoreParentRot = 0xb04; // Integer
std::ptrdiff_t m_animMotionMode = 0xb08; // Integer
std::ptrdiff_t m_syncingWithEntity = 0xb84; // Integer
std::ptrdiff_t m_predictedAnimEventCount = 0xbd0; // Integer
std::ptrdiff_t m_predictedAnimEventTarget = 0xbd4; // Integer
std::ptrdiff_t m_predictedAnimEventSequence = 0xbd8; // Integer
std::ptrdiff_t m_predictedAnimEventModel = 0xbdc; // Integer
std::ptrdiff_t m_nRagdollImpactFXTableId = 0xbf4; // Integer
std::ptrdiff_t m_flSkyScaleStartValue = 0xbf8; // Float
std::ptrdiff_t m_flSkyScaleEndValue = 0xbfc; // Float
std::ptrdiff_t m_sequenceTransitionerLayerCount = 0xdc0; // Integer
std::ptrdiff_t m_nSkin = 0xea8; // Integer
std::ptrdiff_t m_skinMod = 0xeac; // Integer
std::ptrdiff_t m_nBody = 0xeb0; // Integer
std::ptrdiff_t m_camoIndex = 0xeb4; // Integer
std::ptrdiff_t m_nForceBone = 0xef0; // Integer
std::ptrdiff_t m_bSequenceFinished = 0xf54; // Integer
std::ptrdiff_t m_lockedAnimDeltaYaw = 0xf58; // Float
std::ptrdiff_t m_flModelScale = 0xf60; // Float
std::ptrdiff_t m_usable = 0xa90; // Integer
std::ptrdiff_t m_vecViewOffsetx = 0x38; // Float
std::ptrdiff_t m_vecViewOffsety = 0x3c; // Float
std::ptrdiff_t m_vecViewOffsetz = 0x40; // Float
std::ptrdiff_t m_cloakEndTime = 0x19c; // Float
std::ptrdiff_t m_cloakFadeOutStartTime = 0x1a4; // Float
std::ptrdiff_t m_cloakFadeInDuration = 0x1a8; // Float
std::ptrdiff_t m_cloakFlickerAmount = 0x1ac; // Float
std::ptrdiff_t m_networkedFlags = 0x3ec; // Integer
std::ptrdiff_t m_deathVelocity = 0x470; // Vector
std::ptrdiff_t m_nameVisibilityFlags = 0x9b8; // Integer
std::ptrdiff_t m_lastFiredWeapon = 0x1a08; // Integer
std::ptrdiff_t m_sharedEnergyCount = 0x1a10; // Integer
std::ptrdiff_t m_sharedEnergyTotal = 0x1a14; // Integer
std::ptrdiff_t m_sharedEnergyLockoutThreshold = 0x1a18; // Integer
std::ptrdiff_t m_sharedEnergyRegenDelay = 0x1a24; // Float
std::ptrdiff_t m_lastCycleSlot = 0x1aa4; // Integer
std::ptrdiff_t m_weaponPermission = 0x1aac; // Integer
std::ptrdiff_t m_weaponDisabledInScript = 0x1ab4; // Integer
std::ptrdiff_t m_weaponDisabledFlags = 0x1ad9; // Integer
std::ptrdiff_t m_weaponTypeDisabledFlags = 0x1adc; // Integer
std::ptrdiff_t m_weaponAmmoRegenDisabled = 0x1ae9; // Integer
std::ptrdiff_t m_weaponAmmoRegenDisabledRefCount = 0x1aec; // Integer
std::ptrdiff_t m_hudInfo_visibilityTestAlwaysPasses = 0x1af0; // Integer
std::ptrdiff_t m_contextAction = 0x1b04; // Integer
std::ptrdiff_t m_phaseShiftType = 0x1b30; // Integer
std::ptrdiff_t m_targetInfoIconName = 0x1b84; // String
std::ptrdiff_t m_targetInfoPingValue = 0x1bc4; // Integer
std::ptrdiff_t m_parentAttachmentIndex = 0x24; // Integer
std::ptrdiff_t m_fEffects = 0x44; // Integer
std::ptrdiff_t m_usableType = 0x48; // Integer
std::ptrdiff_t m_cellX = 0x4c; // Integer
std::ptrdiff_t m_cellY = 0x50; // Integer
std::ptrdiff_t m_clrRender = 0x50; // Integer
std::ptrdiff_t m_clIntensity = 0x54; // Integer
std::ptrdiff_t m_cellZ = 0x54; // Integer
std::ptrdiff_t m_localOrigin = 0x58; // Vector
std::ptrdiff_t m_nModelIndex = 0x64; // Integer
std::ptrdiff_t m_bossPlayer = 0x124; // Integer
std::ptrdiff_t m_shieldHealth = 0x170; // Integer
std::ptrdiff_t m_shieldHealthMax = 0x174; // Integer
std::ptrdiff_t m_networkedFlags = 0x3ec; // Integer
std::ptrdiff_t m_visibilityFlags = 0x440; // Integer
std::ptrdiff_t m_iTeamNum = 0x448; // Integer
std::ptrdiff_t m_teamMemberIndex = 0x450; // Integer
std::ptrdiff_t m_squadID = 0x454; // Integer
std::ptrdiff_t m_grade = 0x458; // Integer
std::ptrdiff_t m_ignorePredictedTriggerFlags = 0x45c; // Integer
std::ptrdiff_t m_passThroughFlags = 0x464; // Integer
std::ptrdiff_t m_passThroughThickness = 0x468; // Integer
std::ptrdiff_t m_passThroughDirection = 0x46c; // Float
std::ptrdiff_t m_bIsSoundCodeControllerValueSet = 0x47c; // Integer
std::ptrdiff_t m_flSoundCodeControllerValue = 0x480; // Float
std::ptrdiff_t m_localAngles = 0x490; // Vector
std::ptrdiff_t m_hOwnerEntity = 0x4a4; // Integer
std::ptrdiff_t m_bRenderWithViewModels = 0x4a8; // Integer
std::ptrdiff_t m_nRenderFX = 0x4a9; // Integer
std::ptrdiff_t m_nRenderMode = 0x4b9; // Integer
std::ptrdiff_t m_vecMins = 0x4d0; // Vector
std::ptrdiff_t m_vecMaxs = 0x4dc; // Vector
std::ptrdiff_t m_usSolidFlags = 0x4e8; // Integer
std::ptrdiff_t m_nSolidType = 0x4ec; // Integer
std::ptrdiff_t m_triggerBloat = 0x4ed; // Integer
std::ptrdiff_t m_collisionDetailLevel = 0x4ee; // Integer
std::ptrdiff_t m_nSurroundType = 0x4fc; // Integer
std::ptrdiff_t m_vecSpecifiedSurroundingMins = 0x508; // Vector
std::ptrdiff_t m_vecSpecifiedSurroundingMaxs = 0x514; // Vector
std::ptrdiff_t m_CollisionGroup = 0x540; // Integer
std::ptrdiff_t m_contents = 0x544; // Integer
std::ptrdiff_t m_collideWithOwner = 0x548; // Integer
std::ptrdiff_t m_iSignifierName = 0x580; // String
std::ptrdiff_t m_iName = 0x589; // String
std::ptrdiff_t m_scriptNameIndex = 0x690; // Integer
std::ptrdiff_t m_instanceNameIndex = 0x694; // Integer
std::ptrdiff_t m_holdUsePrompt = 0x718; // String
std::ptrdiff_t m_pressUsePrompt = 0x720; // String
std::ptrdiff_t m_phaseShiftFlags = 0x7b8; // Integer
std::ptrdiff_t m_baseTakeDamage = 0x7bc; // Integer
std::ptrdiff_t m_invulnerableToDamageCount = 0x7c0; // Integer
std::ptrdiff_t m_attachmentLerpStartOrigin = 0x83c; // Vector
std::ptrdiff_t m_attachmentLerpStartAngles = 0x848; // Vector
std::ptrdiff_t m_parentAttachmentModel = 0x860; // Integer
std::ptrdiff_t m_fadeDist = 0x86c; // Float
std::ptrdiff_t m_dissolveEffectEntityHandle = 0x918; // Integer
std::ptrdiff_t m_usablePriority = 0x928; // Integer
std::ptrdiff_t m_usableDistanceOverride = 0x92c; // Float
std::ptrdiff_t m_usableFOV = 0x930; // Float
std::ptrdiff_t m_usePromptSize = 0x934; // Float
std::ptrdiff_t m_firstChildEntityLink = 0xa40; // Integer
std::ptrdiff_t m_firstParentEntityLink = 0xa44; // Integer
std::ptrdiff_t m_realmsBitMask = 0xa48; // Integer64
std::ptrdiff_t m_parentAttachmentType = 0x20; // Integer
std::ptrdiff_t m_parentAttachmentIndex = 0x24; // Integer
std::ptrdiff_t m_baseTakeDamage = 0x7bc; // Integer
std::ptrdiff_t m_invulnerableToDamageCount = 0x7c0; // Integer
std::ptrdiff_t m_parentAttachmentHitbox = 0x85c; // Integer
std::ptrdiff_t m_parentAttachmentModel = 0x860; // Integer
std::ptrdiff_t m_doesExplode = 0x2d91; // Integer
std::ptrdiff_t m_DmgRadius = 0x2d94; // Float
std::ptrdiff_t m_grenadeStatusFlags = 0x2db8; // Integer
std::ptrdiff_t m_ziplineGrenadeExpectedEndPosition = 0x2e28; // Vector
std::ptrdiff_t m_vecFinalDest = 0xa74; // Vector
std::ptrdiff_t m_movementType = 0xa80; // Integer
std::ptrdiff_t m_spawnflags = 0x94; // Integer
std::ptrdiff_t m_bClientSidePredicted = 0xa90; // Integer
std::ptrdiff_t m_animStartCycle = 0xc; // Float
std::ptrdiff_t m_animPlaybackRate = 0x10; // Float
std::ptrdiff_t m_animFrozen = 0x14; // Integer
std::ptrdiff_t m_animModelIndex = 0x18; // Integer
std::ptrdiff_t m_animSequence = 0x1c; // Integer
std::ptrdiff_t m_nNewSequenceParity = 0x20; // Integer
std::ptrdiff_t m_fEffects = 0x44; // Integer
std::ptrdiff_t m_clrRender = 0x50; // Integer
std::ptrdiff_t m_nModelIndex = 0x64; // Integer
std::ptrdiff_t m_nRenderMode = 0x4b9; // Integer
std::ptrdiff_t m_nBody = 0xeb0; // Integer
std::ptrdiff_t m_nResetEventsParity = 0xebc; // Integer
std::ptrdiff_t m_bSequenceFinished = 0xf54; // Integer
std::ptrdiff_t m_flModelScale = 0xf60; // Float
std::ptrdiff_t m_viewModelOwner = 0x1a5c; // Integer
std::ptrdiff_t m_projectileIsVisible = 0x1a60; // Integer
std::ptrdiff_t m_bBlockEventLayer = 0x1e40; // Integer
std::ptrdiff_t m_isAdsTransition = 0x1e41; // Integer
std::ptrdiff_t m_hWeapon = 0x1e44; // Integer
std::ptrdiff_t m_cellX = 0x4c; // Integer
std::ptrdiff_t m_cellY = 0x50; // Integer
std::ptrdiff_t m_cellZ = 0x54; // Integer
std::ptrdiff_t m_localOrigin = 0x58; // Vector
std::ptrdiff_t m_nModelIndex = 0x64; // Integer
std::ptrdiff_t m_networkedFlags = 0x3ec; // Integer
std::ptrdiff_t m_localAngles = 0x490; // Vector
std::ptrdiff_t m_hOwnerEntity = 0x4a4; // Integer
std::ptrdiff_t m_vecMins = 0x4d0; // Vector
std::ptrdiff_t m_vecMaxs = 0x4dc; // Vector
std::ptrdiff_t m_usSolidFlags = 0x4e8; // Integer
std::ptrdiff_t m_nSolidType = 0x4ec; // Integer
std::ptrdiff_t m_triggerBloat = 0x4ed; // Integer
std::ptrdiff_t m_collisionDetailLevel = 0x4ee; // Integer
std::ptrdiff_t m_nSurroundType = 0x4fc; // Integer
std::ptrdiff_t m_vecSpecifiedSurroundingMins = 0x508; // Vector
std::ptrdiff_t m_vecSpecifiedSurroundingMaxs = 0x514; // Vector
std::ptrdiff_t m_CollisionGroup = 0x540; // Integer
std::ptrdiff_t m_modelIndex = 0xa60; // Integer
std::ptrdiff_t m_boneIndex = 0xa64; // Integer
std::ptrdiff_t m_nNumWide = 0xa68; // Integer
std::ptrdiff_t m_nNumHigh = 0xa6c; // Integer
std::ptrdiff_t m_flPanelWidth = 0xa70; // Float
std::ptrdiff_t m_flPanelHeight = 0xa74; // Float
std::ptrdiff_t m_vNormal = 0xa78; // Vector
std::ptrdiff_t m_vUp = 0xa84; // Vector
std::ptrdiff_t m_vCorner = 0xa9c; // Vector
std::ptrdiff_t m_bIsBroken = 0xaa8; // Integer
std::ptrdiff_t m_nSurfaceType = 0xaac; // Integer
std::ptrdiff_t m_fEffects = 0x44; // Integer
std::ptrdiff_t m_usableType = 0x48; // Integer
std::ptrdiff_t m_cellX = 0x4c; // Integer
std::ptrdiff_t m_cellY = 0x50; // Integer
std::ptrdiff_t m_cellZ = 0x54; // Integer
std::ptrdiff_t m_localOrigin = 0x58; // Vector
std::ptrdiff_t m_nModelIndex = 0x64; // Integer
std::ptrdiff_t m_networkedFlags = 0x3ec; // Integer
std::ptrdiff_t m_localAngles = 0x490; // Vector
std::ptrdiff_t m_nSkin = 0xea8; // Integer
std::ptrdiff_t m_skinMod = 0xeac; // Integer
std::ptrdiff_t m_closedAngle = 0x1700; // Float
std::ptrdiff_t m_angle = 0x1704; // Float
std::ptrdiff_t m_startAngle = 0x1708; // Float
std::ptrdiff_t m_startAngleVel = 0x170c; // Float
std::ptrdiff_t m_isLocked = 0x1714; // Integer
std::ptrdiff_t m_isFrozen = 0x1715; // Integer
std::ptrdiff_t m_oppositeDoor = 0x1718; // Integer
std::ptrdiff_t m_interactingPlayer = 0x1768; // Integer
std::ptrdiff_t m_interactingPlayerWantsOpen = 0x176c; // Integer
std::ptrdiff_t m_shadowDirection = 0xa60; // Vector
std::ptrdiff_t m_envLightShadowDirection = 0xa78; // Vector
std::ptrdiff_t m_bEnabled = 0xa8c; // Integer
std::ptrdiff_t m_bEnableShadows = 0xa8d; // Integer
std::ptrdiff_t m_LightColor = 0xa8f; // Integer
std::ptrdiff_t m_cloudMaskName = 0xa93; // String
std::ptrdiff_t m_cloudOffset = 0xb98; // Vector
std::ptrdiff_t m_cloudScale = 0xba4; // Float
std::ptrdiff_t m_hOwnerEntity = 0x4a4; // Integer
std::ptrdiff_t m_localOrigin = 0xa60; // Vector
std::ptrdiff_t m_MinFalloff = 0xa6c; // Float
std::ptrdiff_t m_MaxFalloff = 0xa70; // Float
std::ptrdiff_t m_flFadeInDuration = 0xa74; // Float
std::ptrdiff_t m_flFadeOutDuration = 0xa78; // Float
std::ptrdiff_t m_flMaxWeight = 0xa7c; // Float
std::ptrdiff_t m_flCurWeight = 0xa80; // Float
std::ptrdiff_t m_netLookupFilename = 0xa84; // String
std::ptrdiff_t m_bEnabled = 0xb88; // Integer
std::ptrdiff_t m_bMaster = 0xb89; // Integer
std::ptrdiff_t m_bClientSide = 0xb8a; // Integer
std::ptrdiff_t m_bExclusive = 0xb8b; // Integer
std::ptrdiff_t m_parentAttachmentType = 0x20; // Integer
std::ptrdiff_t m_parentAttachmentIndex = 0x24; // Integer
std::ptrdiff_t m_fEffects = 0x44; // Integer
std::ptrdiff_t m_usableType = 0x48; // Integer
std::ptrdiff_t m_cellX = 0x4c; // Integer
std::ptrdiff_t m_cellY = 0x50; // Integer
std::ptrdiff_t m_cellZ = 0x54; // Integer
std::ptrdiff_t m_localOrigin = 0x58; // Vector
std::ptrdiff_t m_nModelIndex = 0x64; // Integer
std::ptrdiff_t m_networkedFlags = 0x3ec; // Integer
std::ptrdiff_t m_visibilityFlags = 0x440; // Integer
std::ptrdiff_t m_iTeamNum = 0x448; // Integer
std::ptrdiff_t m_localAngles = 0x490; // Vector
std::ptrdiff_t m_hOwnerEntity = 0x4a4; // Integer
std::ptrdiff_t m_vecMins = 0x4d0; // Vector
std::ptrdiff_t m_vecMaxs = 0x4dc; // Vector
std::ptrdiff_t m_usSolidFlags = 0x4e8; // Integer
std::ptrdiff_t m_nSolidType = 0x4ec; // Integer
std::ptrdiff_t m_triggerBloat = 0x4ed; // Integer
std::ptrdiff_t m_collisionDetailLevel = 0x4ee; // Integer
std::ptrdiff_t m_nSurroundType = 0x4fc; // Integer
std::ptrdiff_t m_vecSpecifiedSurroundingMins = 0x508; // Vector
std::ptrdiff_t m_vecSpecifiedSurroundingMaxs = 0x514; // Vector
std::ptrdiff_t m_CollisionGroup = 0x540; // Integer
std::ptrdiff_t m_iSignifierName = 0x580; // String
std::ptrdiff_t m_iName = 0x589; // String
std::ptrdiff_t m_holdUsePrompt = 0x718; // String
std::ptrdiff_t m_pressUsePrompt = 0x720; // String
std::ptrdiff_t m_lifeState = 0x798; // Integer
std::ptrdiff_t m_scriptNetData = 0x79c; // Integer
std::ptrdiff_t m_phaseShiftFlags = 0x7b8; // Integer
std::ptrdiff_t m_parentAttachmentModel = 0x860; // Integer
std::ptrdiff_t m_fadeDist = 0x86c; // Float
std::ptrdiff_t m_usablePriority = 0x928; // Integer
std::ptrdiff_t m_usableDistanceOverride = 0x92c; // Float
std::ptrdiff_t m_usableFOV = 0x930; // Float
std::ptrdiff_t m_usePromptSize = 0x934; // Float
std::ptrdiff_t m_firstChildEntityLink = 0xa40; // Integer
std::ptrdiff_t m_firstParentEntityLink = 0xa44; // Integer
std::ptrdiff_t m_realmsBitMask = 0xa48; // Integer64
std::ptrdiff_t m_bUseHitboxesForRenderBox = 0x1691; // Integer
std::ptrdiff_t m_bAnimateInStaticShadow = 0x1692; // Integer
std::ptrdiff_t m_wantsScopeHighlight = 0x1693; // Integer
std::ptrdiff_t m_customOwnerName = 0x16d0; // String
std::ptrdiff_t m_parentAttachmentType = 0x20; // Integer
std::ptrdiff_t m_parentAttachmentIndex = 0x24; // Integer
std::ptrdiff_t m_fEffects = 0x44; // Integer
std::ptrdiff_t m_usableType = 0x48; // Integer
std::ptrdiff_t m_cellX = 0x4c; // Integer
std::ptrdiff_t m_cellY = 0x50; // Integer
std::ptrdiff_t m_cellZ = 0x54; // Integer
std::ptrdiff_t m_localOrigin = 0x58; // Vector
std::ptrdiff_t m_nModelIndex = 0x64; // Integer
std::ptrdiff_t m_vecAngVelocity = 0x128; // Vector
std::ptrdiff_t m_networkedFlags = 0x3ec; // Integer
std::ptrdiff_t m_vecVelocity = 0x484; // Vector
std::ptrdiff_t m_localAngles = 0x490; // Vector
std::ptrdiff_t m_vecMins = 0x4d0; // Vector
std::ptrdiff_t m_vecMaxs = 0x4dc; // Vector
std::ptrdiff_t m_usSolidFlags = 0x4e8; // Integer
std::ptrdiff_t m_nSolidType = 0x4ec; // Integer
std::ptrdiff_t m_triggerBloat = 0x4ed; // Integer
std::ptrdiff_t m_collisionDetailLevel = 0x4ee; // Integer
std::ptrdiff_t m_nSurroundType = 0x4fc; // Integer
std::ptrdiff_t m_vecSpecifiedSurroundingMins = 0x508; // Vector
std::ptrdiff_t m_vecSpecifiedSurroundingMaxs = 0x514; // Vector
std::ptrdiff_t m_CollisionGroup = 0x540; // Integer
std::ptrdiff_t m_iSignifierName = 0x580; // String
std::ptrdiff_t m_scriptNameIndex = 0x690; // Integer
std::ptrdiff_t m_holdUsePrompt = 0x718; // String
std::ptrdiff_t m_pressUsePrompt = 0x720; // String
std::ptrdiff_t m_parentAttachmentHitbox = 0x85c; // Integer
std::ptrdiff_t m_parentAttachmentModel = 0x860; // Integer
std::ptrdiff_t m_fadeDist = 0x86c; // Float
std::ptrdiff_t m_usablePriority = 0x928; // Integer
std::ptrdiff_t m_usableDistanceOverride = 0x92c; // Float
std::ptrdiff_t m_usableFOV = 0x930; // Float
std::ptrdiff_t m_usePromptSize = 0x934; // Float
std::ptrdiff_t m_doorFlags = 0x18c0; // Integer
std::ptrdiff_t m_Flags = 0xa60; // Integer
std::ptrdiff_t m_LightStyle = 0xa61; // Integer
std::ptrdiff_t m_Radius = 0xa64; // Float
std::ptrdiff_t m_Exponent = 0xa68; // Integer
std::ptrdiff_t m_InnerAngle = 0xa6c; // Float
std::ptrdiff_t m_OuterAngle = 0xa70; // Float
std::ptrdiff_t m_SpotRadius = 0xa74; // Float
std::ptrdiff_t m_iTeamNum = 0x448; // Integer
std::ptrdiff_t m_lifeState = 0x798; // Integer
std::ptrdiff_t m_bUseHitboxesForRenderBox = 0x1691; // Integer
std::ptrdiff_t m_bAnimateInStaticShadow = 0x1692; // Integer
std::ptrdiff_t m_wantsScopeHighlight = 0x1693; // Integer
std::ptrdiff_t m_parentAttachmentType = 0x20; // Integer
std::ptrdiff_t m_parentAttachmentIndex = 0x24; // Integer
std::ptrdiff_t m_fEffects = 0x44; // Integer
std::ptrdiff_t m_cellX = 0x4c; // Integer
std::ptrdiff_t m_cellY = 0x50; // Integer
std::ptrdiff_t m_cellZ = 0x54; // Integer
std::ptrdiff_t m_localOrigin = 0x58; // Vector
std::ptrdiff_t m_nModelIndex = 0x64; // Integer
std::ptrdiff_t m_networkedFlags = 0x3ec; // Integer
std::ptrdiff_t m_visibilityFlags = 0x440; // Integer
std::ptrdiff_t m_localAngles = 0x490; // Vector
std::ptrdiff_t m_vecMins = 0x4d0; // Vector
std::ptrdiff_t m_vecMaxs = 0x4dc; // Vector
std::ptrdiff_t m_usSolidFlags = 0x4e8; // Integer
std::ptrdiff_t m_nSolidType = 0x4ec; // Integer
std::ptrdiff_t m_triggerBloat = 0x4ed; // Integer
std::ptrdiff_t m_collisionDetailLevel = 0x4ee; // Integer
std::ptrdiff_t m_nSurroundType = 0x4fc; // Integer
std::ptrdiff_t m_vecSpecifiedSurroundingMins = 0x508; // Vector
std::ptrdiff_t m_vecSpecifiedSurroundingMaxs = 0x514; // Vector
std::ptrdiff_t m_CollisionGroup = 0x540; // Integer
std::ptrdiff_t m_parentAttachmentModel = 0x860; // Integer
std::ptrdiff_t m_fadeDist = 0x86c; // Float
std::ptrdiff_t m_nSkin = 0xea8; // Integer
std::ptrdiff_t m_skinMod = 0xeac; // Integer

// TODO: Added more offsets soon...